// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// user, doctor, appointment
model User {
  id        String  @id @default(cuid())
  clerkId   String  @unique
  email     String  @unique
  firstName String?
  lastName  String?
  phone     String?
  createdAt DateTime @default(now()) // when the user was created
  updatedAt DateTime @updatedAt(now()) // when the user was last updated

  appointments Appointment[]

  @@map("users")
}

model Doctor {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  phone     String
  specialty String
  bio       String?
  imageUrl  String
  gender    Gender
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt(now())

  appointments Appointment[]

  @@map("doctors")
}

model Appointment {
  id          String            @id @default(cuid())
  date        DateTime
  time        String
  duration    Int               @default(30)// duration in minutes
  status      AppointmentStatus @default(CONFIRMED)
  notes       String?
  reason      String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt(now())
  // foreign keys
  userId      String
  doctorId    String
  // relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

enum Gender {
  MALE
  FEMALE
}

enum AppointmentStatus {
  CONFIRMED
  COMPLETED
}